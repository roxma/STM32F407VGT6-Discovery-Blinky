
PROJ_NAME = blinky
STM_COMMON = STM32F4-Discovery_FW_V1.1.0

BUILD = build

BUILD_ELF = $(BUILD)/$(PROJ_NAME).elf
BUILD_HEX = $(BUILD)/$(PROJ_NAME).hex
BUILD_BIN = $(BUILD)/$(PROJ_NAME).bin

SRCS = main.c system_stm32f4xx.c
OBJS = $(addsuffix .o, $(addprefix $(BUILD)/,$(SRCS)))

CFLAGS += -g -O2 -Wall -Wextra -I.

# startup file
VPATH   += $(STM_COMMON)/Libraries/CMSIS/ST/STM32F4xx/Source/Templates/TrueSTUDIO
SRCS  += startup_stm32f4xx.s

# CMSIS
CFLAGS += -I$(STM_COMMON)/Libraries/CMSIS/Include -I$(STM_COMMON)/Libraries/CMSIS/ST/STM32F4xx/Include

# STM32F4-Discovery
VPATH   += $(STM_COMMON)/Utilities/STM32F4-Discovery
CFLAGS += -I$(STM_COMMON)/Utilities/STM32F4-Discovery
SRCS += stm32f4_discovery.c

# StdPeriph
STM_STDPERIPH_PATH=$(STM_COMMON)/Libraries/STM32F4xx_StdPeriph_Driver
VPATH  += $(STM_STDPERIPH_PATH)/src
CFLAGS += -I$(STM_STDPERIPH_PATH)/inc -DUSE_STDPERIPH_DRIVER
SRCS   += $(notdir $(wildcard $(STM_STDPERIPH_PATH)/src/*.c))

CC = arm-none-eabi-gcc
OBJCOPY = arm-none-eabi-objcopy

CFLAGS += -mthumb -mcpu=cortex-m4 -mthumb-interwork
CFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
CFLAGS += -ffunction-sections -fdata-sections

LDFLAGS  = -mthumb -mcpu=cortex-m4 -mthumb-interwork
LDFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16
LDFLAGS += -Tstm32_flash.ld 
LDFLAGS += -Wl,-gc-sections

all: $(BUILD) | $(BUILD)/$(PROJ_NAME).elf $(BUILD)/$(PROJ_NAME).hex $(BUILD)/$(PROJ_NAME).bin

$(BUILD):
	mkdir -p $@

$(BUILD_ELF): $(OBJS) stm32_flash.ld
	$(CC) $(LDFLAGS) $(OBJS) -o $@ 

$(BUILD_HEX): $(BUILD_ELF)
	$(OBJCOPY) -O ihex $^ $@

$(BUILD_BIN): $(BUILD_ELF)
	$(OBJCOPY) -O binary $^ $@

clean:
	rm -rf $(BUILD)

burn: $(BUILD_BIN)
	st-flash --reset write $(BUILD_BIN) 0x8000000

$(OBJS): $(MAKEFILE_LIST)
$(OBJS): $(BUILD)/%.o: %
	$(CC) $(CFLAGS) -MP -MMD -c -o $@ $<

# generated by $(CC) -MP -MMD
sinclude $(OBJS:.o=.d)

